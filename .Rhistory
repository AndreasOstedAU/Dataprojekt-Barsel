ylab("Gns. antal barselsdage for fædre")+
xlab("Fars uddannelsesniveau")+
scale_x_discrete("Uddannelsesniveau",
labels = c(
"Far har ingen ungdomsuddannelse" = "Ingen ungdomsuddannelse",
"Far har ungdomsuddannelse." = "Ungdomsuddannelse",
"Far har Kort videregående uddannelse (KVU)" = "Kort videregående",
"Far har Mellemlang videregående uddannelse (MVU)" = "Mellemlang videregående",
"Far har Lang videregående uddannelse (LVU)" = "Lang videregående"
)
,guide = guide_axis(n.dodge = 2))+
geom_hline(yintercept=c(20,30,40,50))
theme_classic()+
theme(text = element_text(size = 8))
,guide = guide_axis(n.dodge = 2))+
ford_branche %>% filter(OMRÅDE %in% c("Landsdel Nordsjælland","Landsdel Vestjylland")) %>%
mutate(OMRÅDE=fct_relevel(OMRÅDE,"Landsdel Vestjylland","Landsdel Nordsjælland")) %>%
mutate(Branche=fct_relevel(Branche,"CA Føde-, drikke- og tobaksvareindustri","A Landbrug, skovbrug og fiskeri","CK Maskinindustri","MA Rådgivning mv.","JC It- og informationstjenester","K Finansiering og forsikring","CI Elektronikindustri")) %>%
filter(Branche %in% c("MA Rådgivning mv.","K Finansiering og forsikring","JC It- og informationstjenester","CK Maskinindustri","CA Føde-, drikke- og tobaksvareindustri","A Landbrug, skovbrug og fiskeri")) %>%
ggplot(aes(x=Branche, y=`Andel i branche`, fill=OMRÅDE)) +
geom_col(position = position_dodge(),width = 0.8) +
scale_fill_manual(values=c("skyblue2","palegreen2"),name="Landsdel")+
ylab("Andel")+
xlab("Brancher")+
theme_classic()+
theme(text = element_text(size = 8))+
coord_flip()
all<- df %>%
filter(TAL %in% "Far - barselsdagpengedage i gennemsnit",
ORLOV1 %in% "Alle forældrepar, uanset deling af orlov",
grepl(UDDKOMB, pattern = "Far")) %>%  #uddannelseskombinationer som kun indeholder far
filter(OMRÅDE=="Hele landet") %>%
select(UDDKOMB, OMRÅDE, TID, INDHOLD) %>%
arrange(OMRÅDE, TID) %>%
mutate(INDHOLD = parse_number(INDHOLD, locale = locale(decimal_mark = ",")),
TID = factor(TID))
all <- all %>% mutate(UDDKOMB=fct_inorder(UDDKOMB))
all %>%
ggplot(aes(x=UDDKOMB, y=INDHOLD, col=TID)) +
geom_point() +
geom_line(aes(group=TID))+
ylab("Gns. antal barselsdage for fædre")+
xlab("Fars uddannelsesniveau")+
scale_x_discrete("Uddannelsesniveau",
labels = c(
"Far har ingen ungdomsuddannelse" = "Ingen ungdomsuddannelse",
"Far har ungdomsuddannelse." = "Ungdomsuddannelse",
"Far har Kort videregående uddannelse (KVU)" = "Kort videregående",
"Far har Mellemlang videregående uddannelse (MVU)" = "Mellemlang videregående",
"Far har Lang videregående uddannelse (LVU)" = "Lang videregående"
)
,guide = guide_axis(n.dodge = 2))+
theme_classic()+
geom_hline(yintercept=c(20,30,40,50))
theme(text = element_text(size = 8))
all<- df %>%
filter(TAL %in% "Far - barselsdagpengedage i gennemsnit",
ORLOV1 %in% "Alle forældrepar, uanset deling af orlov",
grepl(UDDKOMB, pattern = "Far")) %>%  #uddannelseskombinationer som kun indeholder far
filter(OMRÅDE=="Hele landet") %>%
select(UDDKOMB, OMRÅDE, TID, INDHOLD) %>%
arrange(OMRÅDE, TID) %>%
mutate(INDHOLD = parse_number(INDHOLD, locale = locale(decimal_mark = ",")),
TID = factor(TID))
all <- all %>% mutate(UDDKOMB=fct_inorder(UDDKOMB))
all %>%
ggplot(aes(x=UDDKOMB, y=INDHOLD, col=TID)) +
geom_point() +
geom_line(aes(group=TID))+
ylab("Gns. antal barselsdage for fædre")+
xlab("Fars uddannelsesniveau")+
scale_x_discrete("Uddannelsesniveau",
labels = c(
"Far har ingen ungdomsuddannelse" = "Ingen ungdomsuddannelse",
"Far har ungdomsuddannelse." = "Ungdomsuddannelse",
"Far har Kort videregående uddannelse (KVU)" = "Kort videregående",
"Far har Mellemlang videregående uddannelse (MVU)" = "Mellemlang videregående",
"Far har Lang videregående uddannelse (LVU)" = "Lang videregående"
)
,guide = guide_axis(n.dodge = 2))+
theme_classic()+
geom_hline(yintercept=c(20,30,40,50),color="grey,size=0.1")
all<- df %>%
filter(TAL %in% "Far - barselsdagpengedage i gennemsnit",
ORLOV1 %in% "Alle forældrepar, uanset deling af orlov",
grepl(UDDKOMB, pattern = "Far")) %>%  #uddannelseskombinationer som kun indeholder far
filter(OMRÅDE=="Hele landet") %>%
select(UDDKOMB, OMRÅDE, TID, INDHOLD) %>%
arrange(OMRÅDE, TID) %>%
mutate(INDHOLD = parse_number(INDHOLD, locale = locale(decimal_mark = ",")),
TID = factor(TID))
all <- all %>% mutate(UDDKOMB=fct_inorder(UDDKOMB))
all %>%
ggplot(aes(x=UDDKOMB, y=INDHOLD, col=TID)) +
geom_point() +
geom_line(aes(group=TID))+
ylab("Gns. antal barselsdage for fædre")+
xlab("Fars uddannelsesniveau")+
scale_x_discrete("Uddannelsesniveau",
labels = c(
"Far har ingen ungdomsuddannelse" = "Ingen ungdomsuddannelse",
"Far har ungdomsuddannelse." = "Ungdomsuddannelse",
"Far har Kort videregående uddannelse (KVU)" = "Kort videregående",
"Far har Mellemlang videregående uddannelse (MVU)" = "Mellemlang videregående",
"Far har Lang videregående uddannelse (LVU)" = "Lang videregående"
)
,guide = guide_axis(n.dodge = 2))+
theme_classic()+
geom_hline(yintercept=c(20,30,40,50),color="grey",size=0.1)
theme(text = element_text(size = 8))
library(tidyverse)
library(statsDK)
library(readxl)
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
scale_fill_manual(values=cbbPalette)
df <- read_rds(file = "Data/barsel04.rds")
df$value <- str_replace_all(df$INDHOLD, pattern = ",", replacement = ".") %>% as.double()
pd <- df %>%
filter(TAL %in% "Far - barselsdagpengedage i gennemsnit",
ORLOV1 %in% "Alle forældrepar, uanset deling af orlov",
grepl(UDDKOMB, pattern = "Far"), #uddannelseskombinationer som kun indeholder far
OMRÅDE %in% c("Landsdel Nordsjælland","Landsdel Vestjylland")) %>%
select(UDDKOMB, OMRÅDE, TID, INDHOLD) %>%
arrange(OMRÅDE, TID) %>%
mutate(INDHOLD = parse_number(INDHOLD, locale = locale(decimal_mark = ",")),
TID = factor(TID))
pd <- pd %>% mutate(UDDKOMB=fct_inorder(UDDKOMB))
pd %>% mutate(OMRÅDE=fct_relevel(OMRÅDE,"Landsdel Vestjylland","Landsdel Nordsjælland")) %>%
filter(TID=="2019") %>%
ggplot(aes(x=UDDKOMB, y=INDHOLD, fill=OMRÅDE)) +
geom_col(position = position_dodge2()) +
scale_fill_manual(values=cbbPalette[c(3,8)])+
ylab("Gns. #Barselsdage for fædre")+
xlab("Fars uddannelsesniveau")+
scale_x_discrete(" Fars Uddannelsesniveau",
labels = c(
"Far har ingen ungdomsuddannelse" = "Ingen ungdomsuddannelse",
"Far har ungdomsuddannelse." = "Ungdomsuddannelse",
"Far har Kort videregående uddannelse (KVU)" = "Kort videregående",
"Far har Mellemlang videregående uddannelse (MVU)" = "Mellemlang videregående",
"Far har Lang videregående uddannelse (LVU)" = "Lang videregående"
))+
scale_fill_manual(values=c("skyblue2","palegreen2"),name="Landsdel")+
theme_classic()+
theme(text = element_text(size = 8))+
coord_flip()
pd$OMRÅDE[pd$INDHOLD==max(pd$INDHOLD[pd$UDDKOMB=="Far har Lang videregående uddannelse (LVU)"])]
pd$OMRÅDE[pd$INDHOLD==min(pd$INDHOLD[pd$UDDKOMB=="Far har Lang videregående uddannelse (LVU)"])]
all<- df %>%
filter(TAL %in% "Far - barselsdagpengedage i gennemsnit",
ORLOV1 %in% "Alle forældrepar, uanset deling af orlov",
grepl(UDDKOMB, pattern = "Far")) %>%  #uddannelseskombinationer som kun indeholder far
filter(OMRÅDE=="Hele landet") %>%
select(UDDKOMB, OMRÅDE, TID, INDHOLD) %>%
arrange(OMRÅDE, TID) %>%
mutate(INDHOLD = parse_number(INDHOLD, locale = locale(decimal_mark = ",")),
TID = factor(TID))
all <- all %>% mutate(UDDKOMB=fct_inorder(UDDKOMB))
all %>%
ggplot(aes(x=UDDKOMB, y=INDHOLD, col=TID)) +
geom_point() +
geom_line(aes(group=TID))+
ylab("Gns. antal barselsdage for fædre")+
xlab("Fars uddannelsesniveau")+
scale_x_discrete("Uddannelsesniveau",
labels = c(
"Far har ingen ungdomsuddannelse" = "Ingen ungdomsuddannelse",
"Far har ungdomsuddannelse." = "Ungdomsuddannelse",
"Far har Kort videregående uddannelse (KVU)" = "Kort videregående",
"Far har Mellemlang videregående uddannelse (MVU)" = "Mellemlang videregående",
"Far har Lang videregående uddannelse (LVU)" = "Lang videregående"
)
,guide = guide_axis(n.dodge = 2))+
theme_classic()+
theme(text = element_text(size = 8))
ford<-read_excel(path="Data/Fordelingbrancher.xlsx")
ford<-ford %>% pivot_wider(names_from = ERHVERV,values_from=`2019`) %>%
group_by(OMRÅDE) %>%
mutate_at(vars("A Landbrug, skovbrug og fiskeri":"X Uoplyst aktivitet"), funs(./`TOT Erhverv i alt`))
ford_branche<-ford %>% select(!"TOT Erhverv i alt") %>% pivot_longer(!OMRÅDE,names_to="Branche",values_to="Andel i branche")
ford_branche %>% filter(OMRÅDE %in% c("Landsdel Nordsjælland","Landsdel Vestjylland")) %>%
mutate(OMRÅDE=fct_relevel(OMRÅDE,"Landsdel Vestjylland","Landsdel Nordsjælland")) %>%
mutate(Branche=fct_relevel(Branche,"CA Føde-, drikke- og tobaksvareindustri","A Landbrug, skovbrug og fiskeri","CK Maskinindustri","MA Rådgivning mv.","JC It- og informationstjenester","K Finansiering og forsikring","CI Elektronikindustri")) %>%
filter(Branche %in% c("MA Rådgivning mv.","K Finansiering og forsikring","JC It- og informationstjenester","CK Maskinindustri","CA Føde-, drikke- og tobaksvareindustri","A Landbrug, skovbrug og fiskeri","CI Elektronikindustri")) %>%
ggplot(aes(x=Branche, y=`Andel i branche`, fill=OMRÅDE)) +
geom_col(position = position_dodge(),width = 0.8) +
scale_fill_manual(values=c("skyblue2","palegreen2"),name="Landsdel")+
ylab("Andel")+
xlab("Brancher")+
theme_classic()+
theme(text = element_text(size = 8))+
coord_flip()
udd_landsdele_2019 <- read_excel(path='Data/uddannelsesgrupper_landsdele_2019.xlsx')
udd_landsdele_2019 <- cbind(udd_landsdele_2019, Antal_indbyggere = rowSums(udd_landsdele_2019[,2:11]))
udd_landsdele_2019 <- udd_landsdele_2019 %>% mutate(Ingen_ungdomsuddannelse=`H10 Grundskole`, Ungdomsuddannelse=`H20 Gymnasiale uddannelser`+`H30 Erhvervsfaglige uddannelser`+`H35 Adgangsgivende uddannelsesforløb`, Kort_videregående=`H40 Korte videregående uddannelser, KVU`, Mellemlang_videregående = `H50 Mellemlange videregående uddannelser, MVU` + `H60 Bacheloruddannelser, BACH`, Lang_videregående=`H70 Lange videregående uddannelser, LVU` + `H80 Ph.d. og forskeruddannelser`, Uoplyst=`H90 Uoplyst mv.`)
udd_landsdele_2019 <- udd_landsdele_2019 %>% select(Landsdel, Ingen_ungdomsuddannelse, Ungdomsuddannelse, Kort_videregående, Mellemlang_videregående, Lang_videregående, Uoplyst, Antal_indbyggere)
udd_landsdele_prop_2019 <- udd_landsdele_2019 %>% mutate(ProportionIngen=Ingen_ungdomsuddannelse/Antal_indbyggere, ProportionUngdoms=Ungdomsuddannelse/Antal_indbyggere, ProportionKort=Kort_videregående/Antal_indbyggere, ProportionMellem= Mellemlang_videregående/Antal_indbyggere, ProportionLang=Lang_videregående/Antal_indbyggere, ProportionUoplyst=Uoplyst/Antal_indbyggere) %>% select(Landsdel, ProportionIngen, ProportionUngdoms, ProportionKort, ProportionMellem, ProportionLang, ProportionUoplyst)
udd_pivot <- udd_landsdele_prop_2019  %>% rename(Uoplyst=ProportionUoplyst, Ungdomsuddannelse=ProportionUngdoms, KortVidere=ProportionKort, MellemLang=ProportionMellem, Lang = ProportionLang, Ingen=ProportionIngen) %>% pivot_longer(!Landsdel, names_to = "Uddannelse", values_to = "Proportion")
udd_pivot <- udd_pivot %>% mutate(Uddannelse=fct_inorder(Uddannelse))
udd_pivot %>% filter(Landsdel %in% c("Landsdel Nordsjælland","Landsdel Vestjylland")) %>%
mutate(Landsdel=fct_relevel(Landsdel,"Landsdel Vestjylland","Landsdel Nordsjælland")) %>%
filter(Uddannelse!="Uoplyst") %>%
ggplot(aes(x=Uddannelse, y=Proportion, fill=Landsdel)) +
geom_col(position = position_dodge(),width = 0.8) +
scale_fill_manual(values=c("skyblue2","palegreen2"))+
ylab("Andel")+
xlab("Uddannelse")+
scale_x_discrete("Uddannelsesniveau",
labels = c(
"Far har ingen ungdomsuddannelse" = "Ingen ungdomsuddannelse",
"Far har ungdomsuddannelse." = "Ungdomsuddannelse",
"Far har Kort videregående uddannelse (KVU)" = "Kort videregående",
"Far har Mellemlang videregående uddannelse (MVU)" = "Mellemlang videregående",
"Far har Lang videregående uddannelse (LVU)" = "Lang videregående"
))+
theme_classic()+
theme(text = element_text(size = 8))+
coord_flip()
all<- df %>%
filter(TAL %in% "Far - barselsdagpengedage i gennemsnit",
ORLOV1 %in% "Alle forældrepar, uanset deling af orlov",
grepl(UDDKOMB, pattern = "Far")) %>%  #uddannelseskombinationer som kun indeholder far
filter(OMRÅDE=="Hele landet") %>%
select(UDDKOMB, OMRÅDE, TID, INDHOLD) %>%
arrange(OMRÅDE, TID) %>%
mutate(INDHOLD = parse_number(INDHOLD, locale = locale(decimal_mark = ",")),
TID = factor(TID))
all <- all %>% mutate(UDDKOMB=fct_inorder(UDDKOMB))
all %>%
ggplot(aes(x=UDDKOMB, y=INDHOLD, col=TID)) +
geom_point() +
geom_line(aes(group=TID))+
ylab("Gns. antal barselsdage for fædre")+
xlab("Fars uddannelsesniveau")+
scale_x_discrete("Uddannelsesniveau",
labels = c(
"Far har ingen ungdomsuddannelse" = "Ingen ungdomsuddannelse",
"Far har ungdomsuddannelse." = "Ungdomsuddannelse",
"Far har Kort videregående uddannelse (KVU)" = "Kort videregående",
"Far har Mellemlang videregående uddannelse (MVU)" = "Mellemlang videregående",
"Far har Lang videregående uddannelse (LVU)" = "Lang videregående"
)
,guide = guide_axis(n.dodge = 2))+
geom_hline(yintercept=c(20,30,40,50))
theme_classic()+
theme(text = element_text(size = 8))
all<- df %>%
filter(TAL %in% "Far - barselsdagpengedage i gennemsnit",
ORLOV1 %in% "Alle forældrepar, uanset deling af orlov",
grepl(UDDKOMB, pattern = "Far")) %>%  #uddannelseskombinationer som kun indeholder far
filter(OMRÅDE=="Hele landet") %>%
select(UDDKOMB, OMRÅDE, TID, INDHOLD) %>%
arrange(OMRÅDE, TID) %>%
mutate(INDHOLD = parse_number(INDHOLD, locale = locale(decimal_mark = ",")),
TID = factor(TID))
all <- all %>% mutate(UDDKOMB=fct_inorder(UDDKOMB))
all %>%
ggplot(aes(x=UDDKOMB, y=INDHOLD, col=TID)) +
geom_point() +
geom_line(aes(group=TID))+
ylab("Gns. antal barselsdage for fædre")+
xlab("Fars uddannelsesniveau")+
scale_x_discrete("Uddannelsesniveau",
labels = c(
"Far har ingen ungdomsuddannelse" = "Ingen ungdomsuddannelse",
"Far har ungdomsuddannelse." = "Ungdomsuddannelse",
"Far har Kort videregående uddannelse (KVU)" = "Kort videregående",
"Far har Mellemlang videregående uddannelse (MVU)" = "Mellemlang videregående",
"Far har Lang videregående uddannelse (LVU)" = "Lang videregående"
)
,guide = guide_axis(n.dodge = 2))+
theme_classic()+
geom_hline(yintercept=c(20,30,40,50))+
theme(text = element_text(size = 8))
all<- df %>%
filter(TAL %in% "Far - barselsdagpengedage i gennemsnit",
ORLOV1 %in% "Alle forældrepar, uanset deling af orlov",
grepl(UDDKOMB, pattern = "Far")) %>%  #uddannelseskombinationer som kun indeholder far
filter(OMRÅDE=="Hele landet") %>%
select(UDDKOMB, OMRÅDE, TID, INDHOLD) %>%
arrange(OMRÅDE, TID) %>%
mutate(INDHOLD = parse_number(INDHOLD, locale = locale(decimal_mark = ",")),
TID = factor(TID))
all <- all %>% mutate(UDDKOMB=fct_inorder(UDDKOMB))
all %>%
ggplot(aes(x=UDDKOMB, y=INDHOLD, col=TID)) +
geom_point() +
geom_line(aes(group=TID))+
ylab("Gns. antal barselsdage for fædre")+
xlab("Fars uddannelsesniveau")+
scale_x_discrete("Uddannelsesniveau",
labels = c(
"Far har ingen ungdomsuddannelse" = "Ingen ungdomsuddannelse",
"Far har ungdomsuddannelse." = "Ungdomsuddannelse",
"Far har Kort videregående uddannelse (KVU)" = "Kort videregående",
"Far har Mellemlang videregående uddannelse (MVU)" = "Mellemlang videregående",
"Far har Lang videregående uddannelse (LVU)" = "Lang videregående"
)
,guide = guide_axis(n.dodge = 2))+
theme_classic()+
geom_hline(yintercept=c(20,30,40,50),color="grey",size=0.1)+
theme(text = element_text(size = 8))
udd_pivot <- udd_landsdele_prop_2019  %>% rename(Uoplyst=ProportionUoplyst, Ungdomsuddannelse=ProportionUngdoms, KortVidere=ProportionKort, MellemLang=ProportionMellem, Lang = ProportionLang, Ingen=ProportionIngen) %>% pivot_longer(!Landsdel, names_to = "Uddannelse", values_to = "Proportion")
udd_pivot <- udd_pivot %>% mutate(Uddannelse=fct_inorder(Uddannelse))
udd_pivot %>% filter(Landsdel %in% c("Landsdel Nordsjælland","Landsdel Vestjylland")) %>%
mutate(Landsdel=fct_relevel(Landsdel,"Landsdel Vestjylland","Landsdel Nordsjælland")) %>%
filter(Uddannelse!="Uoplyst") %>%
ggplot(aes(x=Uddannelse, y=Proportion, fill=Landsdel)) +
geom_col(position = position_dodge(),width = 0.8) +
scale_fill_manual(values=c("skyblue2","palegreen2"))+
ylab("Andel")+
xlab("Uddannelse")+
scale_x_discrete("Uddannelsesniveau",
labels = c(
"Ingen" = "Ingen ungdomsuddannelse",
"Ungdomsuddannelse." = "Ungdomsuddannelse",
"KortVidere" = "Kort videregående",
"MellemLang" = "Mellemlang videregående",
"Lang" = "Lang videregående"
))+
theme_classic()+
theme(text = element_text(size = 8))+
coord_flip()
deciler_landsdel_2019_nordvest <- deciler_kommuner %>% full_join(kommune_landsdel_udenchristian) %>% group_by(Landsdel) %>% filter(Landsdel %in% c("Landsdel Nordsjælland","Landsdel Vestjylland")) %>% full_join(folketal_kommuner)
### ulighed for vestjylland og nordsjælland
folketal_kommuner <- read_excel("Data/Kommune_folketal_2019.xlsx")
folketal_kommuner <- folketal_kommuner %>% filter(Kommune!='Christiansø')
kommune_landsdel_udenchristian <- kommune_landsdel %>% filter(Kommune!='Christiansø')
deciler_landsdel_2019_nordvest <- deciler_kommuner %>% full_join(kommune_landsdel_udenchristian) %>% group_by(Landsdel) %>% filter(Landsdel %in% c("Landsdel Nordsjælland","Landsdel Vestjylland")) %>% full_join(folketal_kommuner)
knitr::opts_chunk$set(echo = TRUE)
library(statsDK)
library(tidyverse)
library(readxl)
udd_landsdele_2019 <- read_excel(path='Data/uddannelsesgrupper_landsdele_2019.xlsx')
udd_landsdele_2019 <- cbind(udd_landsdele_2019, Antal_indbyggere = rowSums(udd_landsdele_2019[,2:11]))
head(udd_landsdele_2019,11)
udd_landsdele_2019 <- udd_landsdele_2019 %>% mutate(Ingen_ungdomsuddannelse=`H10 Grundskole`, Ungdomsuddannelse=`H20 Gymnasiale uddannelser`+`H30 Erhvervsfaglige uddannelser`+`H35 Adgangsgivende uddannelsesforløb`, Kort_videregående=`H40 Korte videregående uddannelser, KVU`, Mellemlang_videregående = `H50 Mellemlange videregående uddannelser, MVU` + `H60 Bacheloruddannelser, BACH`, Lang_videregående=`H70 Lange videregående uddannelser, LVU` + `H80 Ph.d. og forskeruddannelser`, Uoplyst=`H90 Uoplyst mv.`)
udd_landsdele_2019 <- udd_landsdele_2019 %>% select(Landsdel, Ingen_ungdomsuddannelse, Ungdomsuddannelse, Kort_videregående, Mellemlang_videregående, Lang_videregående, Uoplyst, Antal_indbyggere)
head(udd_landsdele_2019,11)
udd_landsdele_prop_2019 <- udd_landsdele_2019 %>% mutate(ProportionIngen=Ingen_ungdomsuddannelse/Antal_indbyggere, ProportionUngdoms=Ungdomsuddannelse/Antal_indbyggere, ProportionKort=Kort_videregående/Antal_indbyggere, ProportionMellem= Mellemlang_videregående/Antal_indbyggere, ProportionLang=Lang_videregående/Antal_indbyggere, ProportionUoplyst=Uoplyst/Antal_indbyggere) %>% select(Landsdel, ProportionIngen, ProportionUngdoms, ProportionKort, ProportionMellem, ProportionLang, ProportionUoplyst)
head(udd_landsdele_prop_2019,11)
udd_pivot <- udd_landsdele_prop_2019  %>% rename(Uoplyst=ProportionUoplyst, Ungdomsuddannelse=ProportionUngdoms, KortVidere=ProportionKort, MellemLang=ProportionMellem, Lang = ProportionLang, Ingen=ProportionIngen) %>% pivot_longer(!Landsdel, names_to = "Uddannelse", values_to = "Proportion")
udd_pivot <- udd_pivot %>% mutate(Uddannelse=fct_inorder(Uddannelse))
udd_pivot %>% ggplot(mapping = aes(x = Proportion, y=Uddannelse)) + geom_bar(stat='identity', width=0.8, aes(fill=Landsdel)) + facet_wrap(~Landsdel, ncol = 3, nrow = 6) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(title = "Uddannelse i landsdele") + theme(axis.text.y = element_text(angle = 0, vjust = 1, hjust=1)) +
theme(text = element_text(size = 8.5), element_line(size = 0.2))
udd_gns_2019 <- udd_landsdele_prop_2019 %>% mutate(gns=ProportionIngen*1+ProportionUngdoms*2+ProportionKort*3+ProportionMellem*4+ProportionLang*5) %>% select(Landsdel, gns)
udd_gns_2019 <- udd_gns_2019[order(-udd_gns_2019$gns),]
head(udd_gns_2019,11)
udd_gns_2019 %>% mutate(Landsdel = fct_relevel(Landsdel,
'Landsdel Bornholm','Landsdel Byen København','Landsdel Københavns omegn', 'Landsdel Nordsjælland', 'Landsdel Vest- og Sydsjælland', 'Landsdel Østsjælland', 'Landsdel Fyn', 'Landsdel Sydjylland', 'Landsdel Vestjylland', 'Landsdel Østjylland', 'Landsdel Nordjylland')) %>% ggplot(mapping = aes(x = Landsdel, y=gns)) + geom_bar(stat='identity', width=0.8, fill='hotpink') + labs(title = "Vægtet gennemsnit af uddannelse i landsdele") + scale_x_discrete(labels = function(x) str_wrap(x, width = 8)) + theme(text = element_text(size = 9), element_line(size = 0.2)) + ylab("Vægtet gennemsnit")
køn_landsdele_2019 <- read_excel(path='Data/mændkvinder_landsdele_2019.xlsx')
køn_landsdele_2019 <- køn_landsdele_2019 %>% mutate(PropMænd=Mænd/(Mænd+Kvinder), PropKvinder=Kvinder/(Mænd+Kvinder))
head(køn_landsdele_2019,11)
køn_landsdele_2019 %>% select(Landsdel, PropMænd, PropKvinder) %>% rename(Mænd=PropMænd, Kvinder=PropKvinder) %>% pivot_longer(!Landsdel, names_to = "Køn", values_to = "Proportion") %>% ggplot(mapping = aes(x = Landsdel, y=Proportion)) + geom_bar(stat='identity', width=0.8, aes(fill=Køn), position="dodge") + labs(title = "Fordeling af køn i landsdele") + scale_x_discrete(labels = function(x) str_wrap(x, width = 8)) + theme(text = element_text(size = 9), element_line(size = 0.2))
køn_landsdele_2019 <- køn_landsdele_2019 %>% mutate(Forskel = (Mænd - Kvinder)/(Mænd+Kvinder)*100) %>% arrange(desc(Landsdel))
køn_landsdele_2019
fødealder_kommune_2019 <- read_excel(path='Data/kommune_alderbørn_2019.xlsx')
fødealder_kommune_2019
kommune_landsdel <- read_excel(path='Data/kommuner_landsdele.xlsx')
fødealder_landsdel_2019 <- fødealder_kommune_2019 %>% full_join(kommune_landsdel) %>% filter(`Gennemsnitsalder for førstegangsfødende kvinder`!= 0.0, `Gennemsnitsalder for samtlige fødende kvinder` != 0.0, `Gennemsnitsalder for førstegangs fædre` != 0, `Gennemsnitsalder for fædre til nyfødte` != 0)
fødealder_landsdel_2019 <- fødealder_landsdel_2019 %>% group_by(Landsdel) %>% summarise(gns_førstefødte_mor=mean(`Gennemsnitsalder for førstegangsfødende kvinder`), gns_førstefødte_far=mean(`Gennemsnitsalder for førstegangs fædre`), Antal_kommuner=n())
head(fødealder_landsdel_2019,11)
fødealder_landsdel_2019 %>% select(Landsdel, gns_førstefødte_mor, gns_førstefødte_far) %>% pivot_longer(!Landsdel, names_to = "Forældertype", values_to = "Gennemsnitsalder") %>% ggplot(mapping = aes(x = Landsdel, y=Gennemsnitsalder)) + geom_bar(stat='identity', width=0.8, aes(fill=Forældertype), position="dodge") + labs(title = "Gennemsnitalder for forældertyper i landsdele") + scale_x_discrete(labels = function(x) str_wrap(x, width = 8)) + theme(text = element_text(size = 7.5), element_line(size = 0.2)) + scale_fill_manual(values=c("royalblue1", "violetred1"))
gnsindkomst_landsdele_2019 <- read_excel(path='Data/gns_indkomst_landsdele_2019.xlsx')
gnsindkomst_landsdele_2019 <- gnsindkomst_landsdele_2019[order(-gnsindkomst_landsdele_2019$Gns_indkomst),]
head(gnsindkomst_landsdele_2019,11)
options(scipen=5)
gnsindkomst_landsdele_2019 %>% mutate(Landsdel = fct_relevel(Landsdel,
'Landsdel Bornholm','Landsdel Byen København','Landsdel Københavns omegn', 'Landsdel Nordsjælland', 'Landsdel Vest- og Sydsjælland', 'Landsdel Østsjælland', 'Landsdel Fyn', 'Landsdel Sydjylland', 'Landsdel Vestjylland', 'Landsdel Østjylland', 'Landsdel Nordjylland'))  %>% ggplot(mapping = aes(x = Landsdel, y=Gns_indkomst)) + geom_bar(stat='identity', width=0.8, fill='hotpink') + labs(title = "Gennemsnitlig indkomst i landsdele") + scale_x_discrete(labels = function(x) str_wrap(x, width = 8)) + theme(text = element_text(size = 9), element_line(size = 0.2)) + ylab("Gennemnitsindkomst")
indkomstgrupper_landsdele_2019 <- read_excel(path='Data/indkomstgrupper_landsdele_2019.xlsx')
indkomstgrupper_landsdele_2019 <- cbind(indkomstgrupper_landsdele_2019, Antal = rowSums(indkomstgrupper_landsdele_2019[,2:17]))
indkomstgrupper_landsdele_2019 <- indkomstgrupper_landsdele_2019 %>% mutate(`Under 25.000 kr.`=`Under 25.000 kr.`/Antal, `25.000 - 49.999 kr.`=`25.000 - 49.999 kr.`/Antal, `50.000 - 74.999 kr.`=`50.000 - 74.999 kr.`/Antal, `75.000 - 99.999 kr.`=`75.000 - 99.999 kr.`/Antal, `100.000 - 124.999 kr.`=`100.000 - 124.999 kr.`/Antal, `125.000 - 149.999 kr.`=`125.000 - 149.999 kr.`/Antal, `150.000 - 174.999 kr.`=`150.000 - 174.999 kr.`/Antal,`175.000 - 199.999 kr.`=`175.000 - 199.999 kr.`/Antal, `200.000 - 224.999 kr.`=`200.000 - 224.999 kr.`/Antal, `225.000 - 249.999 kr.`=`225.000 - 249.999 kr.`/Antal, `250.000 - 299.999 kr.`=`250.000 - 299.999 kr.`/Antal, `300.000 - 349.999 kr.`=`300.000 - 349.999 kr.`/Antal, `350.000 - 399.999 kr.`=`350.000 - 399.999 kr.`/Antal, `400.000 - 449.999 kr.`=`400.000 - 449.999 kr.`/Antal, `450.000 - 499.999 kr.`=`450.000 - 499.999 kr.`/Antal,`500.000 kr. og derover`=`500.000 kr. og derover`/Antal)
head(indkomstgrupper_landsdele_2019,11)
indkomstgrupper_landsdele_2019 <- indkomstgrupper_landsdele_2019 %>% select(!Antal) %>% pivot_longer(!Landsdel, names_to = "Indkomstgruppe", values_to = "Proportion")
indkomstgrupper_landsdele_2019 <- indkomstgrupper_landsdele_2019 %>% mutate(Indkomstgruppe=fct_inorder(Indkomstgruppe))
indkomstgrupper_landsdele_2019 %>% ggplot(mapping = aes(x = Proportion, y=Indkomstgruppe)) + geom_bar(stat='identity', width=0.8, aes(fill=Landsdel)) + facet_wrap(~Landsdel, ncol = 3, nrow = 6) + theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) + labs(title = "Fordeling af indkomstgrupper i landsdele") + theme(axis.text.y = element_text(angle = 0, vjust = 1, hjust=1)) +
theme(text = element_text(size = 5), element_line(size = 0.2))
deciler_kommuner <- read_excel("Data/deciler_kommuner_2019.xlsx")
kommune_landsdel_udenchristian <- kommune_landsdel %>% filter(Kommune!='Christiansø')
deciler_landsdel_2019 <- deciler_kommuner %>% full_join(kommune_landsdel_udenchristian) %>% group_by(Landsdel) %>% summarise(Q10=mean(`1. decil`), Q50=mean(`5. decil`),Q90=mean(`9. decil`), Antal_kommuner=n())
deciler_landsdel_2019
### ulighed for vestjylland og nordsjælland
folketal_kommuner <- read_excel("Data/Kommune_folketal_2019.xlsx")
folketal_kommuner <- folketal_kommuner %>% filter(Kommune!='Christiansø')
kommune_landsdel_udenchristian <- kommune_landsdel %>% filter(Kommune!='Christiansø')
deciler_landsdel_2019_nordvest <- deciler_kommuner %>% full_join(kommune_landsdel_udenchristian) %>% group_by(Landsdel) %>% filter(Landsdel %in% c("Landsdel Nordsjælland","Landsdel Vestjylland")) %>% full_join(folketal_kommuner)
landsdel_folketal <- deciler_landsdel_2019_nordvest %>% group_by(Landsdel) %>% summarise(SamletAntal=sum(Antal), n=n())
deciler_landsdel_2019_nordvest <- deciler_landsdel_2019_nordvest %>% full_join(landsdel_folketal) %>% select(!n) %>% mutate(prop=Antal/SamletAntal) %>% group_by(Landsdel) %>% summarise(Q10=sum(prop*`1. decil`),Q90=sum(prop*`9. decil`),Antal_kommuner=n())
deciler_landsdel_2019_nordvest <- deciler_landsdel_2019_nordvest %>% mutate(ulighed=Q90/Q10)
deciler_landsdel_2019_nordvest
folketal_kommuner <- read_excel("Data/Kommune_folketal_2019.xlsx")
folketal_kommuner <- folketal_kommuner %>% filter(Kommune!='Christiansø')
deciler_landsdel_2019_helelandet <- deciler_kommuner %>% full_join(folketal_kommuner) %>% mutate(Land="Danmark")
deciler_landsdel_2019_helelandet
land_folketal <- deciler_landsdel_2019_helelandet %>% group_by(Land) %>% summarise(SamletAntal=sum(Antal), n=n())
land_folketal
deciler_landsdel_2019_helelandet <- deciler_landsdel_2019_helelandet %>% full_join(land_folketal) %>% select(!n) %>%  mutate(prop=Antal/SamletAntal) %>% group_by(Land) %>% summarise(Q10=sum(prop*`1. decil`),Q90=sum(prop*`9. decil`),Antal_kommuner=n())
deciler_landsdel_2019_helelandet
deciler_landsdel_2019_helelandet <- deciler_landsdel_2019_helelandet %>% mutate(ulighed=Q90/Q10)
deciler_landsdel_2019_helelandet
deciler_landsdel_2019 %>% mutate(Landsdel = fct_relevel(Landsdel,
'Landsdel Bornholm','Landsdel Byen København','Landsdel Københavns omegn', 'Landsdel Nordsjælland', 'Landsdel Vest- og Sydsjælland', 'Landsdel Østsjælland', 'Landsdel Fyn', 'Landsdel Sydjylland', 'Landsdel Vestjylland', 'Landsdel Østjylland', 'Landsdel Nordjylland')) %>% select(!Antal_kommuner) %>% pivot_longer(!Landsdel, names_to = "Deciler", values_to = "Indkomst")  %>% ggplot(mapping = aes(x = Deciler, y=Indkomst)) + geom_bar(stat='identity', width=0.8, aes(fill=Landsdel)) + facet_wrap(~Landsdel, ncol = 6, nrow = 3) + theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) + labs(title = "Fordeling af indkomstgrupper i landsdele") + theme(axis.text.y = element_text(angle = 0, vjust = 1, hjust=1)) +
theme(text = element_text(size = 5), element_line(size = 0.2))
deciler_kommuner <- read_excel("Data/deciler_kommuner_2019.xlsx")
kommune_landsdel_udenchristian <- kommune_landsdel %>% filter(Kommune!='Christiansø')
deciler_landsdel_2019 <- deciler_kommuner %>% full_join(kommune_landsdel_udenchristian) %>% group_by(Landsdel) %>% summarise(Q10=mean(`1. decil`), Q50=mean(`5. decil`),Q90=mean(`9. decil`), Antal_kommuner=n())
deciler_landsdel_2019
### ulighed for vestjylland og nordsjælland
folketal_kommuner <- read_excel("Data/Kommune_folketal_2019.xlsx")
folketal_kommuner <- folketal_kommuner %>% filter(Kommune!='Christiansø')
kommune_landsdel_udenchristian <- kommune_landsdel %>% filter(Kommune!='Christiansø')
deciler_kommuner <- read_excel("Data/deciler_kommuner_2019.xlsx")
kommune_landsdel_udenchristian <- kommune_landsdel %>% filter(Kommune!='Christiansø')
deciler_landsdel_2019 <- deciler_kommuner %>% full_join(kommune_landsdel_udenchristian) %>% group_by(Landsdel) %>% summarise(Q10=mean(`1. decil`), Q50=mean(`5. decil`),Q90=mean(`9. decil`), Antal_kommuner=n())
deciler_landsdel_2019
### ulighed for vestjylland og nordsjælland
folketal_kommuner <- read_excel("Data/Kommune_folketal_2019.xlsx")
folketal_kommuner <- folketal_kommuner %>% filter(Kommune!='Christiansø')
kommune_landsdel_udenchristian <- kommune_landsdel %>% filter(Kommune!='Christiansø')
deciler_landsdel_2019_nordvest <- deciler_kommuner %>% full_join(kommune_landsdel_udenchristian) %>% group_by(Landsdel) %>% filter(Landsdel %in% c("Landsdel Nordsjælland","Landsdel Vestjylland")) %>% full_join(folketal_kommuner)
landsdel_folketal <- deciler_landsdel_2019_nordvest %>% group_by(Landsdel) %>% summarise(SamletAntal=sum(Antal), n=n())
deciler_landsdel_2019_nordvest <- deciler_landsdel_2019_nordvest %>% full_join(landsdel_folketal) %>% select(!n) %>% mutate(prop=Antal/SamletAntal) %>% group_by(Landsdel) %>% summarise(Q10=sum(prop*`1. decil`),Q90=sum(prop*`9. decil`),Antal_kommuner=n())
deciler_landsdel_2019_nordvest <- deciler_landsdel_2019_nordvest %>% mutate(ulighed=Q90/Q10)
deciler_landsdel_2019_nordvest
```{r}
folketal_kommuner <- read_excel("Data/Kommune_folketal_2019.xlsx")
folketal_kommuner <- folketal_kommuner %>% filter(Kommune!='Christiansø')
deciler_landsdel_2019_helelandet <- deciler_kommuner %>% full_join(folketal_kommuner) %>% mutate(Land="Danmark")
deciler_landsdel_2019_helelandet
land_folketal <- deciler_landsdel_2019_helelandet %>% group_by(Land) %>% summarise(SamletAntal=sum(Antal), n=n())
land_folketal
deciler_landsdel_2019_helelandet <- deciler_landsdel_2019_helelandet %>% full_join(land_folketal) %>% select(!n) %>%  mutate(prop=Antal/SamletAntal) %>% group_by(Land) %>% summarise(Q10=sum(prop*`1. decil`),Q90=sum(prop*`9. decil`),Antal_kommuner=n())
deciler_landsdel_2019_helelandet
deciler_landsdel_2019_helelandet <- deciler_landsdel_2019_helelandet %>% mutate(ulighed=Q90/Q10)
deciler_landsdel_2019_helelandet
deciler_landsdel_2019_nordvest%>% mutate(Landsdel=fct_relevel(OMRÅDE,"Landsdel Vestjylland","Landsdel Nordsjælland")) %>%
ggplot(aes(x=Landsdel, y=ulighed, fill=Landsdel)) +
geom_col(position = position_dodge2()) +
scale_fill_manual(values=cbbPalette[c(3,8)])+
ylab("Gns. #Barselsdage for fædre")+
xlab("Fars uddannelsesniveau")+
scale_fill_manual(values=c("skyblue2","palegreen2"),name="Landsdel")+
theme_classic()+
theme(text = element_text(size = 8))+
coord_flip()
deciler_landsdel_2019_nordvest%>% mutate(Landsdel=fct_relevel(Landsdel,"Landsdel Vestjylland","Landsdel Nordsjælland")) %>%
ggplot(aes(x=Landsdel, y=ulighed, fill=Landsdel)) +
geom_col(position = position_dodge2()) +
scale_fill_manual(values=cbbPalette[c(3,8)])+
ylab("Gns. #Barselsdage for fædre")+
xlab("Fars uddannelsesniveau")+
scale_fill_manual(values=c("skyblue2","palegreen2"),name="Landsdel")+
theme_classic()+
theme(text = element_text(size = 8))+
coord_flip()
deciler_landsdel_2019_nordvest%>% mutate(Landsdel=fct_relevel(Landsdel,"Landsdel Vestjylland","Landsdel Nordsjælland")) %>%
filter(Landsdel %in% c("Landsdel Nordsjælland","Landsdel Vestjylland")) %>%
ggplot(aes(x=Landsdel, y=ulighed, fill=Landsdel)) +
geom_col(position = position_dodge2()) +
scale_fill_manual(values=cbbPalette[c(3,8)])+
ylab("Gns. #Barselsdage for fædre")+
xlab("Fars uddannelsesniveau")+
scale_fill_manual(values=c("skyblue2","palegreen2"),name="Landsdel")+
theme_classic()+
theme(text = element_text(size = 8))+
coord_flip()
deciler_landsdel_2019_nordvest%>% mutate(Landsdel=fct_relevel(Landsdel,"Landsdel Vestjylland","Landsdel Nordsjælland")) %>%
filter(Landsdel %in% c("Landsdel Nordsjælland","Landsdel Vestjylland")) %>%
ggplot(aes(x=Landsdel, y=ulighed, fill=Landsdel)) +
geom_col(position = position_dodge2()) +
scale_fill_manual(values=cbbPalette[c(3,8)])+
ylab("Ulighed")+
xlab("Landsdel")+
scale_fill_manual(values=c("skyblue2","palegreen2"),name="Landsdel")+
theme_classic()+
theme(text = element_text(size = 8))+
coord_flip()
deciler_landsdel_2019_nordvest%>% mutate(Landsdel=fct_relevel(Landsdel,"Landsdel Nordsjælland","Landsdel Vestjylland")) %>%
filter(Landsdel %in% c("Landsdel Nordsjælland","Landsdel Vestjylland")) %>%
ggplot(aes(x=Landsdel, y=ulighed, fill=Landsdel)) +
geom_col(position = position_dodge2()) +
scale_fill_manual(values=cbbPalette[c(3,8)])+
ylab("Ulighed")+
xlab("Landsdel")+
scale_fill_manual(values=c("skyblue2","palegreen2"),name="Landsdel")+
theme_classic()+
theme(text = element_text(size = 8))+
coord_flip()
deciler_landsdel_2019_nordvest%>% mutate(Landsdel=fct_relevel(Landsdel,"Landsdel Nordsjælland","Landsdel Vestjylland")) %>%
filter(Landsdel %in% c("Landsdel Nordsjælland","Landsdel Vestjylland")) %>%
ggplot(aes(x=Landsdel, y=ulighed, fill=Landsdel)) +
geom_col(position = position_dodge2()) +
scale_fill_manual(values=cbbPalette[c(3,8)])+
ylab("Ulighed")+
xlab("Landsdel")+
scale_fill_manual(values=c("skyblue2","palegreen2"),name="Landsdel")+
theme_classic()+
geom_hline(aes(yintercept=3.212436))+
theme(text = element_text(size = 8))+
coord_flip()
deciler_landsdel_2019_nordvest%>% mutate(Landsdel=fct_relevel(Landsdel,"Landsdel Nordsjælland","Landsdel Vestjylland")) %>%
filter(Landsdel %in% c("Landsdel Nordsjælland","Landsdel Vestjylland")) %>%
ggplot(aes(x=Landsdel, y=ulighed, fill=Landsdel)) +
geom_col(position = position_dodge2()) +
scale_fill_manual(values=cbbPalette[c(3,8)])+
ylab("Ulighed")+
xlab("Landsdel")+
scale_fill_manual(values=c("skyblue2","palegreen2"),name="Landsdel")+
theme_classic()+
geom_hline(aes(yintercept=3.212436),color="red")+
theme(text = element_text(size = 8))+
coord_flip()
